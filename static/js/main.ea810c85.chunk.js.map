{"version":3,"sources":["components/Section/Section.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","reportWebVitals.js","index.js","components/Statistics/Statistics.module.css","components/Notification/Notification.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","Statistics","stat","good","neutral","bad","total","positivePercentage","className","styles","title","list","FeedbackOptions","options","onLeaveFeedback","map","option","button","name","type","onClick","shortid","generate","Section","children","text","protoTypes","PropTypes","string","isRequired","Notification","message","App","useState","Good","setGood","Neutral","setNeutral","Bad","setBad","Math","floor","Object","keys","e","target","prev","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4IACAA,EAAOC,QAAU,CAAC,KAAO,wB,sIC2CVC,EAxCI,SAAC,GAOb,IANLC,EAMI,EANJA,KACAC,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,MACAC,EACI,EADJA,mBAEA,OACE,qCACE,oBAAIC,UAAWC,IAAOC,MAAtB,SAA8BR,IAC9B,qBAAIM,UAAWC,IAAOE,KAAtB,UACE,6BACE,uCAAUR,OAEZ,6BACE,0CAAaC,OAEf,6BACE,sCAASC,OAEX,6BACE,uCAAUC,OAEZ,6BACE,mDAAsBC,EAAtB,gB,gCCFKK,EAtBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,mCACGD,EAAQE,KAAI,SAACC,GAAD,OACX,wBACER,UAAWC,IAAOQ,OAClBC,KAAMF,EACNG,KAAK,SAELC,QAASN,EALX,SAOGE,GAHIK,IAAQC,kB,kCCTjBC,EAAU,SAAC,GAAyB,IAAvBb,EAAsB,EAAtBA,MAAOc,EAAe,EAAfA,SACxB,OACE,qCACE,oBAAIhB,UAAWC,IAAOgB,KAAtB,SAA6Bf,IAC5Bc,MAKPD,EAAQG,WAAa,CACnBhB,MAAOiB,IAAUC,OAAOC,YAGXN,Q,gBCAAO,EAbM,SAAC,GAAuB,IAArB5B,EAAoB,EAApBA,KAAM6B,EAAc,EAAdA,QAC5B,OACE,qCACE,oBAAIvB,UAAWC,IAAOC,MAAtB,SAA8BR,IAC9B,mBAAGM,UAAWC,IAAOgB,KAArB,SAA4BM,QCFnB,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAsBJ,mBAAS,GAA/B,mBAAOK,EAAP,KAAYC,EAAZ,KAmBMjC,EAAQ4B,EAAOE,EAAUE,EACzB/B,EAAqBiC,KAAKC,MAAOP,EAAO5B,EAAS,KAKvD,OACE,sBAAKE,UAAU,aAAf,UACE,kCACE,cAAC,EAAD,CAASE,MAAM,wBAAf,SACE,cAAC,EAAD,CACEG,QAAS6B,OAAOC,KAAK,CAAET,OAAME,UAASE,QACtCxB,gBA7BkB,SAAC8B,GAK3B,OADiBA,EAAEC,OAAX3B,MAEN,IAAK,OACH,OAAOiB,GAAQ,SAACW,GAAD,OAAUA,EAAO,KAClC,IAAK,UACH,OAAOT,GAAW,SAACS,GAAD,OAAUA,EAAO,KACrC,IAAK,MACH,OAAOP,GAAO,SAACO,GAAD,OAAUA,EAAO,KACjC,QACE,OAAO,aAoBT,kCACa,IAAVxC,EACC,cAAC,EAAD,CAAcJ,KAAK,aAAa6B,QAAQ,sBAExC,cAAC,EAAD,CACE7B,KAAK,aACLC,KAAM+B,EACN9B,QAASgC,EACT/B,IAAKiC,EACLhC,MAAOA,EACPC,mBAAoBA,SCtDhC,IAYewC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC1B,EAAD,MAEF2B,SAASC,eAAe,SAM1Bb,K,kBCfAhD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,MAAQ,4B,kBCA1DD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,MAAQ,8B,kBCA5DD,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.ea810c85.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Section_text__3piEj\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Statistics.module.css\";\n\nconst Statistics = ({\n  stat,\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) => {\n  return (\n    <>\n      <h2 className={styles.title}>{stat}</h2>\n      <ul className={styles.list}>\n        <li>\n          <p>Good: {good}</p>\n        </li>\n        <li>\n          <p>Neutral: {neutral}</p>\n        </li>\n        <li>\n          <p>Bad: {bad}</p>\n        </li>\n        <li>\n          <p>Total:{total}</p>\n        </li>\n        <li>\n          <p>Positive feedback:{positivePercentage}%</p>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport shortid from \"shortid\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./FeedbackOptions.module.css\";\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <>\n      {options.map((option) => (\n        <button\n          className={styles.button}\n          name={option}\n          type=\"button\"\n          key={shortid.generate()}\n          onClick={onLeaveFeedback}\n        >\n          {option}\n        </button>\n      ))}\n    </>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Section.module.css\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <>\n      <h2 className={styles.text}>{title}</h2>\n      {children}\n    </>\n  );\n};\n\nSection.protoTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Notification.module.css\";\n\nconst Notification = ({ stat, message }) => {\n  return (\n    <>\n      <h2 className={styles.title}>{stat}</h2>\n      <p className={styles.text}>{message}</p>\n    </>\n  );\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { useState } from \"react\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Section from \"./components/Section/Section\";\nimport Notification from \"./components/Notification/Notification\";\n\nexport default function App() {\n  const [Good, setGood] = useState(0);\n  const [Neutral, setNeutral] = useState(0);\n  const [Bad, setBad] = useState(0);\n\n  const handleLeaveFeedback = (e) => {\n    // this.setState((prevState) => ({\n    //   [e.target.name]: prevState[e.target.name] + 1,\n    // }));\n    const { name } = e.target;\n    switch (name) {\n      case \"Good\":\n        return setGood((prev) => prev + 1);\n      case \"Neutral\":\n        return setNeutral((prev) => prev + 1);\n      case \"Bad\":\n        return setBad((prev) => prev + 1);\n      default:\n        return null;\n    }\n  };\n\n  const total = Good + Neutral + Bad;\n  const positivePercentage = Math.floor((Good / total) * 100);\n\n  // render() {\n  // const feedbacks = {Object.keys({ Good, Neutral, Bad }) };\n\n  return (\n    <div className=\"Statistics\">\n      <section>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys({ Good, Neutral, Bad })}\n            onLeaveFeedback={handleLeaveFeedback}\n          />\n        </Section>\n      </section>\n      <section>\n        {total === 0 ? (\n          <Notification stat=\"Statistics\" message=\"No feedback given\" />\n        ) : (\n          <Statistics\n            stat=\"Statistics\"\n            good={Good}\n            neutral={Neutral}\n            bad={Bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        )}\n      </section>\n    </div>\n  );\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__2vNOL\",\"title\":\"Statistics_title__2-Zl6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__ItlAX\",\"title\":\"Notification_title__23T4J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__2DgfK\"};"],"sourceRoot":""}